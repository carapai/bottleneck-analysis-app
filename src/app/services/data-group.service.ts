import { Injectable } from '@angular/core';
import * as _ from 'lodash';
import { NgxDhis2HttpClientService } from '@hisptz/ngx-dhis2-http-client';
import { switchMap, catchError, map } from 'rxjs/operators';
import { forkJoin, of, throwError } from 'rxjs';
import { DataGroup } from '../models/data-group.model';
import { generateDefaultGroups } from '../helpers/generate-default-groups.helper';

@Injectable({
  providedIn: 'root'
})
export class DataGroupService {
  dataStoreUrl: string;
  constructor(private http: NgxDhis2HttpClientService) {
    this.dataStoreUrl = 'dataStore/data-filter-groups';
  }

  getDataGroups(dataGroupPreferences: any = { autoGenerateDataGroups: true }) {
    return this.http.get(this.dataStoreUrl).pipe(
      switchMap((dataGroupIds: string[]) =>
        forkJoin(
          _.map(dataGroupIds, (dataGroupId: string) =>
            this.http.get(`${this.dataStoreUrl}/${dataGroupId}`)
          )
        )
      ),
      catchError((error: any) => {
        if (
          error.status !== 404 ||
          !dataGroupPreferences.autoGenerateDataGroups
        ) {
          return of([]);
        }

        return forkJoin(
          _.map(generateDefaultGroups(), (dataGroup: DataGroup) =>
            this.createDataGroup(dataGroup)
          )
        ).pipe(
          map((dataGroups: DataGroup[]) => dataGroups),
          catchError(() => of([]))
        );
      })
    );
  }

  createDataGroup(dataGroup: DataGroup) {
    return this.http
      .post(`${this.dataStoreUrl}/${dataGroup.id}`, dataGroup)
      .pipe(map(() => dataGroup));
  }

  updateDataGroup(dataGroup: DataGroup) {
    return this.http.put(
      `${this.dataStoreUrl}/${dataGroup.id}`,
      _.omit(dataGroup, ['showEditForm', 'showDeleteDialog', 'deleting'])
    );
  }

  deleteDataGroup(id: string) {
    return this.http.delete(`${this.dataStoreUrl}/${id}`);
  }
}
